labels = c("Actual turnout", "100% turnout"),
values = c("#0072B2", "#56B4E9")) +
labs(title = "2016 Election (all states)",
x = "GOP Vote Percentage",
y = "State",
color = "Voter turnout") +
theme_bw() +
theme(axis.text.y = element_text(size = 5),
legend.title = element_text(size = 10),
legend.title.align = 0.5)
# Zoomed-in version
p2 = dt_state_2016_combined %>%
filter(turnout_type %in% c("expected_turnout", "full_turnout")) %>%
filter(gop_vote_percentage >= 0.45 & gop_vote_percentage <= 0.55) %>%
filter(!name %in% c("New Mexico", "Iowa")) %>%
ggplot(aes(x = gop_vote_percentage, y = name)) +
geom_vline(xintercept = 0.5, linetype = "dotted") +
geom_line(aes(group = name), color = "#6f6f6f") +
geom_point(aes(color = turnout_type)) +
scale_x_continuous(labels = scales::percent_format(accuracy = 1)) +
scale_color_manual(breaks = c("expected_turnout", "full_turnout"),
labels = c("Actual turnout", "100% turnout"),
values = c("#0072B2", "#56B4E9")) +
labs(title = "2016 Election (swing states)",
x = "GOP Vote Percentage",
y = "State",
color = "Voter turnout") +
theme_bw() +
theme(legend.title = element_text(size = 10),
legend.title.align = 0.5)
plot_grid(p1, p2, labels = "auto", ncol = 1)
ggsave(file = "~/Desktop/election_2016_plot.png", width = 6, height = 8)
# Plot 2016 election with 2008 race turnout
dt_state_2016_combined %>%
filter(turnout_type %in% c("expected_turnout", "2008_turnout")) %>%
filter(gop_vote_percentage >= 0.45 & gop_vote_percentage <= 0.55) %>%
filter(!name %in% c("New Mexico", "Iowa")) %>%
ggplot(aes(x = gop_vote_percentage, y = name)) +
geom_vline(xintercept = 0.5, linetype = "dotted") +
geom_line(aes(group = name), color = "#6f6f6f") +
geom_point(aes(color = turnout_type)) +
scale_x_continuous(labels = scales::percent_format(accuracy = 1)) +
scale_color_manual(breaks = c("expected_turnout", "2008_turnout"),
labels = c("Actual turnout", "2008 turnout"),
values = c("#0072B2", "#CC79A7")) +
labs(title = "2016 Election (with 2008 turnout rate)",
x = "GOP Vote Percentage",
y = "State",
color = "Voter turnout") +
theme_bw() +
theme(legend.title = element_text(size = 10),
legend.title.align = 0.5)
ggsave(file = "~/Desktop/election_2016_plot_2.png", width = 6, height = 4)
# Calculate state_level party preference in 2019 (adjusted for state bias)
dt_state_2019 = dt_demog_state %>%
group_by(state, name) %>%
summarize_at(vars(party_pref), funs(weighted.mean(., w = turnout_weight2019))) %>%
ungroup() %>%
left_join(., state_tb, by = "name") %>%
mutate(party_pref_adj_expected_turnout = party_pref*state_bias) %>%
arrange(party_pref_adj_expected_turnout)
# Calculate state-level party preference in 2019 under full turnout for all groups (adjusted for state bias)
dt_state_2019_full = dt_demog_state %>%
group_by(state, name) %>%
summarize_at(vars(party_pref), funs(weighted.mean(., w = popestimate2019))) %>%
ungroup() %>%
left_join(., state_tb, by = "name") %>%
mutate(party_pref_adj_full_turnout = party_pref*state_bias) %>%
arrange(party_pref_adj_full_turnout)
dt_state_2019_combined = dt_state_2019 %>%
left_join(., dt_state_2019_full %>% select(name, party_pref_adj_full_turnout), by = "name") %>%
select(name, party_pref_adj_expected_turnout, party_pref_adj_full_turnout) %>%
mutate(name = reorder(name, party_pref_adj_expected_turnout)) %>%
pivot_longer(cols = starts_with("party_pref_adj"), names_to = "turnout_type", names_prefix = "party_pref_adj_", values_to = "party_pref") %>%
mutate(gop_vote_percentage = party_pref/(party_pref + 1))
# Plot 2016 election with 2019 demographics
dt_state_2019_combined %>%
filter(gop_vote_percentage >= 0.45 & gop_vote_percentage <= 0.55) %>%
# filter(!name %in% c("New Mexico")) %>%
ggplot(aes(x = gop_vote_percentage, y = name)) +
geom_vline(xintercept = 0.5, linetype = "dotted") +
geom_line(aes(group = name), color = "#6f6f6f") +
geom_point(aes(color = turnout_type)) +
scale_x_continuous(labels = scales::percent_format(accuracy = 1)) +
scale_color_manual(breaks = c("expected_turnout", "full_turnout"),
labels = c("Expected turnout", "100% turnout"),
values = c("#0072B2", "#56B4E9")) +
labs(title = "2016 Election (with 2019 demographics)",
x = "GOP Vote Percentage",
y = "State",
color = "Voter turnout") +
theme_bw() +
theme(legend.title = element_text(size = 10),
legend.title.align = 0.5)
ggsave(file = "~/Desktop/election_2019_plot.png", width = 6, height = 4)
# Sex
sex_tb = tibble(sex = c("Male", "Female"),
party_pref_sex = c(52/41, 39/54), # Data source #1
turnout_sex = c(0.593, 0.633)) # Data source #3
# Age
age_tb = tibble(age = c("18-29", "30-49", "50-64", "65+"),
party_pref_age = c(28/58, 40/51, 51/45, 53/44), # Data source #1
turnout_age = c(0.434, 0.569, 0.662, 0.714)) # Data source #2 (Note: age groups are different: 18-29, 30-44, 45-59, 60+)
# Race
race_tb = tibble(race = c("White", "Black", "Hispanic", "Asian"),
party_pref_race = c(54/39, 6/91, 28/66, 23/65), # Data sources #1, #6
turnout_race = c(0.647, 0.599, 0.449, 0.339)) # Data sources #2, #5
# 2008 turnouts
sex_tb_2008 = tibble(sex = c("Male", "Female"),
turnout_sex_2008 = c(0.615, 0.656)) # Data source #3
age_tb_2008 = tibble(age = c("18-29", "30-49", "50-64", "65+"),
turnout_age_2008 = c(0.484, 0.607, 0.695, 0.710)) # Data source #2 (Note: age groups are different: 18-29, 30-44, 45-59, 60+)
race_tb_2008 = tibble(race = c("White", "Black", "Hispanic", "Asian"),
turnout_race_2008 = c(0.652, 0.691, 0.465, 0.321)) # Data sources #2, #5
# Demographics by state
demog_raw = read_csv("../../csv/sc-est2019-alldata5.csv", col_types = cols()) # Data source #4
demog = demog_raw %>%
clean_names() %>%
filter(age >= 18) %>%
mutate(sex = case_when(sex == 1 ~ "Male",
sex == 2 ~ "Female"),
race = case_when(race == 1 & origin == 1 ~ "White",
race == 2 ~ "Black",
origin == 2 ~ "Hispanic",
race == 4 ~ "Asian"),
age = case_when(age >= 18 & age <= 29 ~ "18-29",
age >= 30 & age <= 49 ~ "30-49",
age >= 50 & age <= 64 ~ "50-64",
age >= 65 ~ "65+")) %>%
filter(!is.na(sex) & !is.na(race) & !is.na(age)) %>%
select(state, name, sex, race, age, popestimate2016, popestimate2019)
# Calculate overall turnout and party preference for each sex/age/race group by state
dt_demog_state = demog %>%
left_join(sex_tb, by = "sex") %>%
left_join(age_tb, by = "age") %>%
left_join(race_tb, by = "race") %>%
left_join(sex_tb_2008, by = "sex") %>%
left_join(age_tb_2008, by = "age") %>%
left_join(race_tb_2008, by = "race") %>%
mutate(turnout = rowMeans(select(., c("turnout_sex", "turnout_age", "turnout_race"))),
turnout_2008 = rowMeans(select(., c("turnout_sex_2008", "turnout_age_2008", "turnout_race_2008"))),
party_pref = party_pref_sex*party_pref_age*party_pref_race,
turnout_weight2016 = turnout*popestimate2016,
turnout_weight2019 = turnout*popestimate2019)
# Calculate state-level party preference (unadjusted for state bias)
dt_state_2016 = dt_demog_state %>%
group_by(state, name) %>%
summarize_at(vars(party_pref), ~weighted.mean(., w = turnout_weight2016)) %>%
ungroup() %>%
arrange(party_pref)
# Calculate state bias
voting_results_2016_raw = read_csv("../../csv/2016_US_County_Level_Presidential_Results.csv", col_types = cols()) # Data source #7
voting_results_2016 = voting_results_2016_raw %>%
select(votes_dem, votes_gop, state_abbr) %>%
distinct() %>%
group_by(state_abbr) %>%
summarize_at(vars(votes_dem, votes_gop), sum) %>%
ungroup() %>%
mutate(votes_ratio_2016 = votes_gop/votes_dem,
name = state.name[match(state_abbr, state.abb)],
name = ifelse(is.na(name), "District of Columbia", name)) %>%
select(name, votes_ratio_2016)
state_tb = dt_state_2016 %>%
left_join(., voting_results_2016, by = "name") %>%
mutate(state_bias = votes_ratio_2016/party_pref) %>%
select(name, state_bias)
# Calculate state_level party preference in 2016 (adjusted for state bias)
dt_state_2016 = dt_demog_state %>%
group_by(state, name) %>%
summarize_at(vars(party_pref), funs(weighted.mean(., w = turnout_weight2016))) %>%
ungroup() %>%
left_join(., state_tb, by = "name") %>%
mutate(party_pref_adj_expected_turnout = party_pref*state_bias) %>%
arrange(party_pref_adj_expected_turnout)
# Calculate state-level party preference in 2016 under 2008 turnout for race (adjusted for state bias)
dt_state_2016_turnout2008 = dt_demog_state %>%
group_by(state, name) %>%
summarize_at(vars(party_pref), funs(weighted.mean(., w = turnout_2008*popestimate2016))) %>%
ungroup() %>%
left_join(., state_tb, by = "name") %>%
mutate(party_pref_adj_2008_turnout = party_pref*state_bias) %>%
arrange(party_pref_adj_2008_turnout)
# Calculate state-level party preference in 2016 under full turnout for all groups (adjusted for state bias)
dt_state_2016_full = dt_demog_state %>%
group_by(state, name) %>%
summarize_at(vars(party_pref), funs(weighted.mean(., w = popestimate2016))) %>%
ungroup() %>%
left_join(., state_tb, by = "name") %>%
mutate(party_pref_adj_full_turnout = party_pref*state_bias) %>%
arrange(party_pref_adj_full_turnout)
dt_state_2016_combined = dt_state_2016 %>%
left_join(., dt_state_2016_turnout2008 %>% select(name, party_pref_adj_2008_turnout), by = "name") %>%
left_join(., dt_state_2016_full %>% select(name, party_pref_adj_full_turnout), by = "name") %>%
select(name, party_pref_adj_expected_turnout, party_pref_adj_full_turnout, party_pref_adj_2008_turnout) %>%
mutate(name = reorder(name, party_pref_adj_expected_turnout)) %>%
pivot_longer(cols = starts_with("party_pref_adj"), names_to = "turnout_type", names_prefix = "party_pref_adj_", values_to = "party_pref") %>%
mutate(gop_vote_percentage = party_pref/(party_pref + 1))
# Plot 2016 election with 2016 demographics
p1 = dt_state_2016_combined %>%
filter(turnout_type %in% c("expected_turnout", "full_turnout")) %>%
ggplot(aes(x = gop_vote_percentage, y = name)) +
geom_vline(xintercept = 0.5, linetype = "dotted") +
geom_line(aes(group = name), color = "#6f6f6f") +
geom_point(aes(color = turnout_type), size = 0.8) +
scale_x_continuous(labels = scales::percent_format(accuracy = 1)) +
scale_color_manual(breaks = c("expected_turnout", "full_turnout"),
labels = c("Actual turnout", "100% turnout"),
values = c("#0072B2", "#56B4E9")) +
labs(title = "2016 Election (all states)",
x = "GOP Vote Percentage",
y = "State",
color = "Voter turnout") +
theme_bw() +
theme(axis.text.y = element_text(size = 5),
legend.title = element_text(size = 10),
legend.title.align = 0.5)
# Zoomed-in version
p2 = dt_state_2016_combined %>%
filter(turnout_type %in% c("expected_turnout", "full_turnout")) %>%
filter(gop_vote_percentage >= 0.45 & gop_vote_percentage <= 0.55) %>%
filter(!name %in% c("New Mexico", "Iowa")) %>%
ggplot(aes(x = gop_vote_percentage, y = name)) +
geom_vline(xintercept = 0.5, linetype = "dotted") +
geom_line(aes(group = name), color = "#6f6f6f") +
geom_point(aes(color = turnout_type)) +
scale_x_continuous(labels = scales::percent_format(accuracy = 1)) +
scale_color_manual(breaks = c("expected_turnout", "full_turnout"),
labels = c("Actual turnout", "100% turnout"),
values = c("#0072B2", "#56B4E9")) +
labs(title = "2016 Election (swing states)",
x = "GOP Vote Percentage",
y = "State",
color = "Voter turnout") +
theme_bw() +
theme(legend.title = element_text(size = 10),
legend.title.align = 0.5)
plot_grid(p1, p2, labels = "auto", ncol = 1)
ggsave(file = "~/Desktop/election_2016_plot.png", width = 6, height = 8)
# Plot 2016 election with 2008 race turnout
dt_state_2016_combined %>%
filter(turnout_type %in% c("expected_turnout", "2008_turnout")) %>%
filter(gop_vote_percentage >= 0.45 & gop_vote_percentage <= 0.55) %>%
filter(!name %in% c("New Mexico", "Iowa")) %>%
ggplot(aes(x = gop_vote_percentage, y = name)) +
geom_vline(xintercept = 0.5, linetype = "dotted") +
geom_line(aes(group = name), color = "#6f6f6f") +
geom_point(aes(color = turnout_type)) +
scale_x_continuous(labels = scales::percent_format(accuracy = 1)) +
scale_color_manual(breaks = c("expected_turnout", "2008_turnout"),
labels = c("Actual turnout", "2008 turnout"),
values = c("#0072B2", "#CC79A7")) +
labs(title = "2016 Election (with 2008 turnout rate)",
x = "GOP Vote Percentage",
y = "State",
color = "Voter turnout") +
theme_bw() +
theme(legend.title = element_text(size = 10),
legend.title.align = 0.5)
ggsave(file = "~/Desktop/election_2016_plot_2.png", width = 6, height = 4)
# Calculate state_level party preference in 2019 (adjusted for state bias)
dt_state_2019 = dt_demog_state %>%
group_by(state, name) %>%
summarize_at(vars(party_pref), funs(weighted.mean(., w = turnout_weight2019))) %>%
ungroup() %>%
left_join(., state_tb, by = "name") %>%
mutate(party_pref_adj_expected_turnout = party_pref*state_bias) %>%
arrange(party_pref_adj_expected_turnout)
# Calculate state-level party preference in 2019 under full turnout for all groups (adjusted for state bias)
dt_state_2019_full = dt_demog_state %>%
group_by(state, name) %>%
summarize_at(vars(party_pref), funs(weighted.mean(., w = popestimate2019))) %>%
ungroup() %>%
left_join(., state_tb, by = "name") %>%
mutate(party_pref_adj_full_turnout = party_pref*state_bias) %>%
arrange(party_pref_adj_full_turnout)
dt_state_2019_combined = dt_state_2019 %>%
left_join(., dt_state_2019_full %>% select(name, party_pref_adj_full_turnout), by = "name") %>%
select(name, party_pref_adj_expected_turnout, party_pref_adj_full_turnout) %>%
mutate(name = reorder(name, party_pref_adj_expected_turnout)) %>%
pivot_longer(cols = starts_with("party_pref_adj"), names_to = "turnout_type", names_prefix = "party_pref_adj_", values_to = "party_pref") %>%
mutate(gop_vote_percentage = party_pref/(party_pref + 1))
# Plot 2016 election with 2019 demographics
dt_state_2019_combined %>%
filter(gop_vote_percentage >= 0.45 & gop_vote_percentage <= 0.55) %>%
filter(!name %in% c("New Mexico")) %>%
ggplot(aes(x = gop_vote_percentage, y = name)) +
geom_vline(xintercept = 0.5, linetype = "dotted") +
geom_line(aes(group = name), color = "#6f6f6f") +
geom_point(aes(color = turnout_type)) +
scale_x_continuous(labels = scales::percent_format(accuracy = 1)) +
scale_color_manual(breaks = c("expected_turnout", "full_turnout"),
labels = c("Expected turnout", "100% turnout"),
values = c("#0072B2", "#56B4E9")) +
labs(title = "2016 Election (with 2019 demographics)",
x = "GOP Vote Percentage",
y = "State",
color = "Voter turnout") +
theme_bw() +
theme(legend.title = element_text(size = 10),
legend.title.align = 0.5)
ggsave(file = "~/Desktop/election_2019_plot.png", width = 6, height = 4)
demog_Raw
demog_raw
demog_raw %>% group_by(race, origin) %>% summarize(sum = sum(POPESTIMATE2019))
demog_raw %>% group_by(RACE< ORIGIN) %>% summarize(sum = sum(POPESTIMATE2019))
demog_raw %>% group_by(RACE, ORIGIN) %>% summarize(sum = sum(POPESTIMATE2019))
# Sex
sex_tb = tibble(sex = c("Male", "Female"),
party_pref_sex = c(52/41, 39/54), # Data source #1
turnout_sex = c(0.593, 0.633)) # Data source #3
# Age
age_tb = tibble(age = c("18-29", "30-49", "50-64", "65+"),
party_pref_age = c(28/58, 40/51, 51/45, 53/44), # Data source #1
turnout_age = c(0.434, 0.569, 0.662, 0.714)) # Data source #2 (Note: age groups are different: 18-29, 30-44, 45-59, 60+)
# Race
race_tb = tibble(race = c("White", "Black", "Hispanic", "Asian"),
party_pref_race = c(54/39, 6/91, 28/66, 23/65), # Data sources #1, #6
turnout_race = c(0.647, 0.599, 0.449, 0.339)) # Data sources #2, #5
# 2008 turnouts
sex_tb_2008 = tibble(sex = c("Male", "Female"),
turnout_sex_2008 = c(0.615, 0.656)) # Data source #3
age_tb_2008 = tibble(age = c("18-29", "30-49", "50-64", "65+"),
turnout_age_2008 = c(0.484, 0.607, 0.695, 0.710)) # Data source #2 (Note: age groups are different: 18-29, 30-44, 45-59, 60+)
race_tb_2008 = tibble(race = c("White", "Black", "Hispanic", "Asian"),
turnout_race_2008 = c(0.652, 0.691, 0.465, 0.321)) # Data sources #2, #5
# Demographics by state
demog_raw = read_csv("../../csv/sc-est2019-alldata5.csv", col_types = cols()) # Data source #4
demog = demog_raw %>%
clean_names() %>%
filter(age >= 18) %>%
mutate(sex = case_when(sex == 1 ~ "Male",
sex == 2 ~ "Female"),
race = case_when(race == 1 & origin == 1 ~ "White",
race == 2 ~ "Black",
race == 1 & origin == 2 ~ "Hispanic",
race == 4 ~ "Asian"),
age = case_when(age >= 18 & age <= 29 ~ "18-29",
age >= 30 & age <= 49 ~ "30-49",
age >= 50 & age <= 64 ~ "50-64",
age >= 65 ~ "65+")) %>%
filter(!is.na(sex) & !is.na(race) & !is.na(age)) %>%
select(state, name, sex, race, age, popestimate2016, popestimate2019)
# Calculate overall turnout and party preference for each sex/age/race group by state
dt_demog_state = demog %>%
left_join(sex_tb, by = "sex") %>%
left_join(age_tb, by = "age") %>%
left_join(race_tb, by = "race") %>%
left_join(sex_tb_2008, by = "sex") %>%
left_join(age_tb_2008, by = "age") %>%
left_join(race_tb_2008, by = "race") %>%
mutate(turnout = rowMeans(select(., c("turnout_sex", "turnout_age", "turnout_race"))),
turnout_2008 = rowMeans(select(., c("turnout_sex_2008", "turnout_age_2008", "turnout_race_2008"))),
party_pref = party_pref_sex*party_pref_age*party_pref_race,
turnout_weight2016 = turnout*popestimate2016,
turnout_weight2019 = turnout*popestimate2019)
# Calculate state-level party preference (unadjusted for state bias)
dt_state_2016 = dt_demog_state %>%
group_by(state, name) %>%
summarize_at(vars(party_pref), ~weighted.mean(., w = turnout_weight2016)) %>%
ungroup() %>%
arrange(party_pref)
# Calculate state bias
voting_results_2016_raw = read_csv("../../csv/2016_US_County_Level_Presidential_Results.csv", col_types = cols()) # Data source #7
voting_results_2016 = voting_results_2016_raw %>%
select(votes_dem, votes_gop, state_abbr) %>%
distinct() %>%
group_by(state_abbr) %>%
summarize_at(vars(votes_dem, votes_gop), sum) %>%
ungroup() %>%
mutate(votes_ratio_2016 = votes_gop/votes_dem,
name = state.name[match(state_abbr, state.abb)],
name = ifelse(is.na(name), "District of Columbia", name)) %>%
select(name, votes_ratio_2016)
state_tb = dt_state_2016 %>%
left_join(., voting_results_2016, by = "name") %>%
mutate(state_bias = votes_ratio_2016/party_pref) %>%
select(name, state_bias)
# Calculate state_level party preference in 2016 (adjusted for state bias)
dt_state_2016 = dt_demog_state %>%
group_by(state, name) %>%
summarize_at(vars(party_pref), funs(weighted.mean(., w = turnout_weight2016))) %>%
ungroup() %>%
left_join(., state_tb, by = "name") %>%
mutate(party_pref_adj_expected_turnout = party_pref*state_bias) %>%
arrange(party_pref_adj_expected_turnout)
# Calculate state-level party preference in 2016 under 2008 turnout for race (adjusted for state bias)
dt_state_2016_turnout2008 = dt_demog_state %>%
group_by(state, name) %>%
summarize_at(vars(party_pref), funs(weighted.mean(., w = turnout_2008*popestimate2016))) %>%
ungroup() %>%
left_join(., state_tb, by = "name") %>%
mutate(party_pref_adj_2008_turnout = party_pref*state_bias) %>%
arrange(party_pref_adj_2008_turnout)
# Calculate state-level party preference in 2016 under full turnout for all groups (adjusted for state bias)
dt_state_2016_full = dt_demog_state %>%
group_by(state, name) %>%
summarize_at(vars(party_pref), funs(weighted.mean(., w = popestimate2016))) %>%
ungroup() %>%
left_join(., state_tb, by = "name") %>%
mutate(party_pref_adj_full_turnout = party_pref*state_bias) %>%
arrange(party_pref_adj_full_turnout)
dt_state_2016_combined = dt_state_2016 %>%
left_join(., dt_state_2016_turnout2008 %>% select(name, party_pref_adj_2008_turnout), by = "name") %>%
left_join(., dt_state_2016_full %>% select(name, party_pref_adj_full_turnout), by = "name") %>%
select(name, party_pref_adj_expected_turnout, party_pref_adj_full_turnout, party_pref_adj_2008_turnout) %>%
mutate(name = reorder(name, party_pref_adj_expected_turnout)) %>%
pivot_longer(cols = starts_with("party_pref_adj"), names_to = "turnout_type", names_prefix = "party_pref_adj_", values_to = "party_pref") %>%
mutate(gop_vote_percentage = party_pref/(party_pref + 1))
# Plot 2016 election with 2016 demographics
p1 = dt_state_2016_combined %>%
filter(turnout_type %in% c("expected_turnout", "full_turnout")) %>%
ggplot(aes(x = gop_vote_percentage, y = name)) +
geom_vline(xintercept = 0.5, linetype = "dotted") +
geom_line(aes(group = name), color = "#6f6f6f") +
geom_point(aes(color = turnout_type), size = 0.8) +
scale_x_continuous(labels = scales::percent_format(accuracy = 1)) +
scale_color_manual(breaks = c("expected_turnout", "full_turnout"),
labels = c("Actual turnout", "100% turnout"),
values = c("#0072B2", "#56B4E9")) +
labs(title = "2016 Election (all states)",
x = "GOP Vote Percentage",
y = "State",
color = "Voter turnout") +
theme_bw() +
theme(axis.text.y = element_text(size = 5),
legend.title = element_text(size = 10),
legend.title.align = 0.5)
# Zoomed-in version
p2 = dt_state_2016_combined %>%
filter(turnout_type %in% c("expected_turnout", "full_turnout")) %>%
filter(gop_vote_percentage >= 0.45 & gop_vote_percentage <= 0.55) %>%
filter(!name %in% c("New Mexico", "Iowa")) %>%
ggplot(aes(x = gop_vote_percentage, y = name)) +
geom_vline(xintercept = 0.5, linetype = "dotted") +
geom_line(aes(group = name), color = "#6f6f6f") +
geom_point(aes(color = turnout_type)) +
scale_x_continuous(labels = scales::percent_format(accuracy = 1)) +
scale_color_manual(breaks = c("expected_turnout", "full_turnout"),
labels = c("Actual turnout", "100% turnout"),
values = c("#0072B2", "#56B4E9")) +
labs(title = "2016 Election (swing states)",
x = "GOP Vote Percentage",
y = "State",
color = "Voter turnout") +
theme_bw() +
theme(legend.title = element_text(size = 10),
legend.title.align = 0.5)
plot_grid(p1, p2, labels = "auto", ncol = 1)
ggsave(file = "~/Desktop/election_2016_plot.png", width = 6, height = 8)
# Plot 2016 election with 2008 race turnout
dt_state_2016_combined %>%
filter(turnout_type %in% c("expected_turnout", "2008_turnout")) %>%
filter(gop_vote_percentage >= 0.45 & gop_vote_percentage <= 0.55) %>%
filter(!name %in% c("New Mexico", "Iowa")) %>%
ggplot(aes(x = gop_vote_percentage, y = name)) +
geom_vline(xintercept = 0.5, linetype = "dotted") +
geom_line(aes(group = name), color = "#6f6f6f") +
geom_point(aes(color = turnout_type)) +
scale_x_continuous(labels = scales::percent_format(accuracy = 1)) +
scale_color_manual(breaks = c("expected_turnout", "2008_turnout"),
labels = c("Actual turnout", "2008 turnout"),
values = c("#0072B2", "#CC79A7")) +
labs(title = "2016 Election (with 2008 turnout rate)",
x = "GOP Vote Percentage",
y = "State",
color = "Voter turnout") +
theme_bw() +
theme(legend.title = element_text(size = 10),
legend.title.align = 0.5)
ggsave(file = "~/Desktop/election_2016_plot_2.png", width = 6, height = 4)
# Calculate state_level party preference in 2019 (adjusted for state bias)
dt_state_2019 = dt_demog_state %>%
group_by(state, name) %>%
summarize_at(vars(party_pref), funs(weighted.mean(., w = turnout_weight2019))) %>%
ungroup() %>%
left_join(., state_tb, by = "name") %>%
mutate(party_pref_adj_expected_turnout = party_pref*state_bias) %>%
arrange(party_pref_adj_expected_turnout)
# Calculate state-level party preference in 2019 under full turnout for all groups (adjusted for state bias)
dt_state_2019_full = dt_demog_state %>%
group_by(state, name) %>%
summarize_at(vars(party_pref), funs(weighted.mean(., w = popestimate2019))) %>%
ungroup() %>%
left_join(., state_tb, by = "name") %>%
mutate(party_pref_adj_full_turnout = party_pref*state_bias) %>%
arrange(party_pref_adj_full_turnout)
dt_state_2019_combined = dt_state_2019 %>%
left_join(., dt_state_2019_full %>% select(name, party_pref_adj_full_turnout), by = "name") %>%
select(name, party_pref_adj_expected_turnout, party_pref_adj_full_turnout) %>%
mutate(name = reorder(name, party_pref_adj_expected_turnout)) %>%
pivot_longer(cols = starts_with("party_pref_adj"), names_to = "turnout_type", names_prefix = "party_pref_adj_", values_to = "party_pref") %>%
mutate(gop_vote_percentage = party_pref/(party_pref + 1))
# Plot 2016 election with 2019 demographics
dt_state_2019_combined %>%
filter(gop_vote_percentage >= 0.45 & gop_vote_percentage <= 0.55) %>%
filter(!name %in% c("New Mexico")) %>%
ggplot(aes(x = gop_vote_percentage, y = name)) +
geom_vline(xintercept = 0.5, linetype = "dotted") +
geom_line(aes(group = name), color = "#6f6f6f") +
geom_point(aes(color = turnout_type)) +
scale_x_continuous(labels = scales::percent_format(accuracy = 1)) +
scale_color_manual(breaks = c("expected_turnout", "full_turnout"),
labels = c("Expected turnout", "100% turnout"),
values = c("#0072B2", "#56B4E9")) +
labs(title = "2016 Election (with 2019 demographics)",
x = "GOP Vote Percentage",
y = "State",
color = "Voter turnout") +
theme_bw() +
theme(legend.title = element_text(size = 10),
legend.title.align = 0.5)
ggsave(file = "~/Desktop/election_2019_plot.png", width = 6, height = 4)
