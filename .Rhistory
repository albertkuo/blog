# Result in win
x = 0
if(n > current_diff){
for(i in (current_diff+1):n){
for(j in 0:(i-current_diff-1)){
x = x + dbinom(i, n, p)*dbinom(j, n, 1-p)
}
}
} else {
x = 0
}
print(x)
n = 100
for(n in 60:120){
n_prob = 1/60
if(n > current_diff){
for(i in (current_diff+1):n){
for(j in 0:(i-current_diff-1)){
x = x + dbinom(i, n, p)*dbinom(j, n, 1-p)*n_prob
}
}
} else if (n == current_diff){
x = x + dbinom(current_diff, n, p)*dbinom(0, n, 1-p)*n_prob
} else {
x = 0
}
}
print(x)
for(n_overtime in 5:15){
}# conditional on tie, the probability of winning in overtime
# Probability of winning in regulation
pbinom(5, 10, 0.5)
pbinom(1, 10, 0.5)
n %% 2
10 %% 2
11 %% 2
12 %% 2
n = 81
pbinom(n/2 + 5, n, 0.5)
pbinom(80/2 + 5, n, 0.5)
pbinom(ceiling(n/2) + 5, n, 0.5)
n_overtime = 3
pbinom(3/2, 3, 0.5)
pbinom(ceiling(3/2), 3, 0.5)
pbinom(floor(3/2), 3, 0.5)
?pbinom
current_diff = 5
n = 5
p_win + (1 - pbinom(floor(n/2) + current_diff, n, p))*n_prob
p_win = 0
p_win + (1 - pbinom(floor(n/2) + current_diff, n, p))*n_prob
floor(n/2)
(1 - pbinom(floor((n + diff)/2), n, p))*n_prob
n
diff
10/2
pbinom(5, 5, 0.5)
dbinom(n/2, n, p)
dbinom((n + diff)/2, n, p)
n
diff
p_tie = dbinom((n + diff)/2, n, p)
p_tie*(1 - pbinom(floor(n_overtime/2), n_overtime, p2))*n_prob
p2 = 0.5
p_tie*(1 - pbinom(floor(n_overtime/2), n_overtime, p2))*n_prob
n_overtime
pbinom(floor(n_overtime/2), n_overtime, p2)
current_diff = 5
n = rnorm(100, mean = 80, sd = 5) # empirical # of points left to earn
p = 0.5 # probability scoring on each play of losing team
# X ~ Binom(n, p) # the number of points losing team will score in remaining time
# Y ~ Binom(n, 1 - p) # the number of points winning team will score in remaining time
n = 100           # # of points left to earn
n_overtime = 10   # # of points in overtime
p_win = 0 # Probability of winning the game
for(n in 60:120){
n_prob = 1/61
if(n > current_diff){
# Probability of winning in regulation
p_win = p_win + (1 - pbinom(floor((n + diff)/2), n, p))*n_prob
# Probability of winning in overtime
if((n + diff) %% 2 == 0){
p_tie = dbinom((n + diff)/2, n, p)
} else {
p_tie = 0
}
p_win_overtime = p_tie*0.5*n_prob # In the event of a tie at regulation, assume teams are equally matched, so conditional probability of winning in overtime is 0.5
p_win = p_win + p_win_overtime
} else {
x = 0
}
}
print(x)
current_diff = 10
n = rnorm(100, mean = 80, sd = 5) # empirical # of points left to earn
p = 0.5 # probability scoring on each play of losing team
# X ~ Binom(n, p) # the number of points losing team will score in remaining time
# Y ~ Binom(n, 1 - p) # the number of points winning team will score in remaining time
n = 100           # # of points left to earn
n_overtime = 10   # # of points in overtime
p_win = 0 # Probability of winning the game
for(n in 60:120){
n_prob = 1/61
if(n > current_diff){
# Probability of winning in regulation
p_win = p_win + (1 - pbinom(floor((n + diff)/2), n, p))*n_prob
# Probability of winning in overtime
if((n + diff) %% 2 == 0){
p_tie = dbinom((n + diff)/2, n, p)
} else {
p_tie = 0
}
p_win_overtime = p_tie*0.5*n_prob # In the event of a tie at regulation, assume teams are equally matched, so conditional probability of winning in overtime is 0.5
p_win = p_win + p_win_overtime
} else {
x = 0
}
}
print(x)
current_diff = 10
n = rnorm(100, mean = 80, sd = 5) # empirical # of points left to earn
p = 0.5 # probability scoring on each play of losing team
# X ~ Binom(n, p) # the number of points losing team will score in remaining time
# Y ~ Binom(n, 1 - p) # the number of points winning team will score in remaining time
n = 100           # # of points left to earn
n_overtime = 10   # # of points in overtime
p_win = 0 # Probability of winning the game
for(n in 60:120){
n_prob = 1/61
if(n > current_diff){
# Probability of winning in regulation
p_win = p_win + (1 - pbinom(floor((n + current_diff)/2), n, p))*n_prob
# Probability of winning in overtime
if((n + diff) %% 2 == 0){
p_tie = dbinom((n + current_diff)/2, n, p)
} else {
p_tie = 0
}
p_win_overtime = p_tie*0.5*n_prob # In the event of a tie at regulation, assume teams are equally matched, so conditional probability of winning in overtime is 0.5
p_win = p_win + p_win_overtime
} else {
x = 0
}
}
print(x)
current_diff = 10
n = rnorm(100, mean = 80, sd = 5) # empirical # of points left to earn
p = 0.5 # probability scoring on each play of losing team
# X ~ Binom(n, p) # the number of points losing team will score in remaining time
# Y ~ Binom(n, 1 - p) # the number of points winning team will score in remaining time
n = 100           # # of points left to earn
n_overtime = 10   # # of points in overtime
p_win = 0 # Probability of winning the game
for(n in 60:120){
n_prob = 1/61
if(n > current_diff){
# Probability of winning in regulation
p_win = p_win + (1 - pbinom(floor((n + current_diff)/2), n, p))*n_prob
# Probability of winning in overtime
if((n + current_diff) %% 2 == 0){
p_tie = dbinom((n + current_diff)/2, n, p)
} else {
p_tie = 0
}
p_win_overtime = p_tie*0.5*n_prob # In the event of a tie at regulation, assume teams are equally matched, so conditional probability of winning in overtime is 0.5
p_win = p_win + p_win_overtime
} else {
x = 0
}
}
print(x)
current_diff = 1
n = rnorm(100, mean = 80, sd = 5) # empirical # of points left to earn
p = 0.5 # probability scoring on each play of losing team
# X ~ Binom(n, p) # the number of points losing team will score in remaining time
# Y ~ Binom(n, 1 - p) # the number of points winning team will score in remaining time
n = 100           # # of points left to earn
n_overtime = 10   # # of points in overtime
p_win = 0 # Probability of winning the game
for(n in 60:120){
n_prob = 1/61
if(n > current_diff){
# Probability of winning in regulation
p_win = p_win + (1 - pbinom(floor((n + current_diff)/2), n, p))*n_prob
# Probability of winning in overtime
if((n + current_diff) %% 2 == 0){
p_tie = dbinom((n + current_diff)/2, n, p)
} else {
p_tie = 0
}
p_win_overtime = p_tie*0.5*n_prob # In the event of a tie at regulation, assume teams are equally matched, so conditional probability of winning in overtime is 0.5
p_win = p_win + p_win_overtime
} else {
p_win = 0
}
}
print(p_win)
current_diff = 0
n = rnorm(100, mean = 80, sd = 5) # empirical # of points left to earn
p = 0.5 # probability scoring on each play of losing team
# X ~ Binom(n, p) # the number of points losing team will score in remaining time
# Y ~ Binom(n, 1 - p) # the number of points winning team will score in remaining time
n = 100           # # of points left to earn
n_overtime = 10   # # of points in overtime
p_win = 0 # Probability of winning the game
for(n in 60:120){
n_prob = 1/61
if(n > current_diff){
# Probability of winning in regulation
p_win = p_win + (1 - pbinom(floor((n + current_diff)/2), n, p))*n_prob
# Probability of winning in overtime
if((n + current_diff) %% 2 == 0){
p_tie = dbinom((n + current_diff)/2, n, p)
} else {
p_tie = 0
}
p_win_overtime = p_tie*0.5*n_prob # In the event of a tie at regulation, assume teams are equally matched, so conditional probability of winning in overtime is 0.5
p_win = p_win + p_win_overtime
} else {
p_win = 0
}
}
print(p_win)
current_diff = 2
n = rnorm(100, mean = 80, sd = 5) # empirical # of points left to earn
p = 0.5 # probability scoring on each play of losing team
# X ~ Binom(n, p) # the number of points losing team will score in remaining time
# Y ~ Binom(n, 1 - p) # the number of points winning team will score in remaining time
n = 100           # # of points left to earn
n_overtime = 10   # # of points in overtime
p_win = 0 # Probability of winning the game
for(n in 60:120){
n_prob = 1/61
if(n > current_diff){
# Probability of winning in regulation
p_win = p_win + (1 - pbinom(floor((n + current_diff)/2), n, p))*n_prob
# Probability of winning in overtime
if((n + current_diff) %% 2 == 0){
p_tie = dbinom((n + current_diff)/2, n, p)
} else {
p_tie = 0
}
p_win_overtime = p_tie*0.5*n_prob # In the event of a tie at regulation, assume teams are equally matched, so conditional probability of winning in overtime is 0.5
p_win = p_win + p_win_overtime
} else {
p_win = 0
}
}
print(p_win)
current_diff = 10
n = rnorm(100, mean = 80, sd = 5) # empirical # of points left to earn
p = 0.5 # probability scoring on each play of losing team
# X ~ Binom(n, p) # the number of points losing team will score in remaining time
# Y ~ Binom(n, 1 - p) # the number of points winning team will score in remaining time
n = 100           # # of points left to earn
n_overtime = 10   # # of points in overtime
p_win = 0 # Probability of winning the game
for(n in 60:120){
n_prob = 1/61
if(n > current_diff){
# Probability of winning in regulation
p_win = p_win + (1 - pbinom(floor((n + current_diff)/2), n, p))*n_prob
# Probability of winning in overtime
if((n + current_diff) %% 2 == 0){
p_tie = dbinom((n + current_diff)/2, n, p)
} else {
p_tie = 0
}
p_win_overtime = p_tie*0.5*n_prob # In the event of a tie at regulation, assume teams are equally matched, so conditional probability of winning in overtime is 0.5
p_win = p_win + p_win_overtime
} else {
p_win = 0
}
}
print(p_win)
current_diff = 10
n = rnorm(100, mean = 80, sd = 5) # empirical # of points left to earn
p = 0.5 # probability scoring on each play of losing team
# X ~ Binom(n, p) # the number of points losing team will score in remaining time
# Y ~ Binom(n, 1 - p) # the number of points winning team will score in remaining time
n = 100           # # of points left to earn
n_overtime = 10   # # of points in overtime
p_win = 0 # Probability of winning the game
for(n in 80:120){
n_prob = 1/41
if(n > current_diff){
# Probability of winning in regulation
p_win = p_win + (1 - pbinom(floor((n + current_diff)/2), n, p))*n_prob
# Probability of winning in overtime
if((n + current_diff) %% 2 == 0){
p_tie = dbinom((n + current_diff)/2, n, p)
} else {
p_tie = 0
}
p_win_overtime = p_tie*0.5*n_prob # In the event of a tie at regulation, assume teams are equally matched, so conditional probability of winning in overtime is 0.5
p_win = p_win + p_win_overtime
} else {
p_win = 0
}
}
print(p_win)
current_diff = 5
n = rnorm(100, mean = 80, sd = 5) # empirical # of points left to earn
p = 0.5 # probability scoring on each play of losing team
# X ~ Binom(n, p) # the number of points losing team will score in remaining time
# Y ~ Binom(n, 1 - p) # the number of points winning team will score in remaining time
n = 100           # # of points left to earn
n_overtime = 10   # # of points in overtime
p_win = 0 # Probability of winning the game
for(n in 80:120){
n_prob = 1/41
if(n > current_diff){
# Probability of winning in regulation
p_win = p_win + (1 - pbinom(floor((n + current_diff)/2), n, p))*n_prob
# Probability of winning in overtime
if((n + current_diff) %% 2 == 0){
p_tie = dbinom((n + current_diff)/2, n, p)
} else {
p_tie = 0
}
p_win_overtime = p_tie*0.5*n_prob # In the event of a tie at regulation, assume teams are equally matched, so conditional probability of winning in overtime is 0.5
p_win = p_win + p_win_overtime
} else {
p_win = 0
}
}
print(p_win)
current_diff = 1
n = rnorm(100, mean = 80, sd = 5) # empirical # of points left to earn
p = 0.5 # probability scoring on each play of losing team
# X ~ Binom(n, p) # the number of points losing team will score in remaining time
# Y ~ Binom(n, 1 - p) # the number of points winning team will score in remaining time
n = 100           # # of points left to earn
n_overtime = 10   # # of points in overtime
p_win = 0 # Probability of winning the game
for(n in 80:120){
n_prob = 1/41
if(n > current_diff){
# Probability of winning in regulation
p_win = p_win + (1 - pbinom(floor((n + current_diff)/2), n, p))*n_prob
# Probability of winning in overtime
if((n + current_diff) %% 2 == 0){
p_tie = dbinom((n + current_diff)/2, n, p)
} else {
p_tie = 0
}
p_win_overtime = p_tie*0.5*n_prob # In the event of a tie at regulation, assume teams are equally matched, so conditional probability of winning in overtime is 0.5
p_win = p_win + p_win_overtime
} else {
p_win = 0
}
}
print(p_win)
current_diff = 2
n = rnorm(100, mean = 80, sd = 5) # empirical # of points left to earn
p = 0.5 # probability scoring on each play of losing team
# X ~ Binom(n, p) # the number of points losing team will score in remaining time
# Y ~ Binom(n, 1 - p) # the number of points winning team will score in remaining time
n = 100           # # of points left to earn
n_overtime = 10   # # of points in overtime
p_win = 0 # Probability of winning the game
for(n in 80:120){
n_prob = 1/41
if(n > current_diff){
# Probability of winning in regulation
p_win = p_win + (1 - pbinom(floor((n + current_diff)/2), n, p))*n_prob
# Probability of winning in overtime
if((n + current_diff) %% 2 == 0){
p_tie = dbinom((n + current_diff)/2, n, p)
} else {
p_tie = 0
}
p_win_overtime = p_tie*0.5*n_prob # In the event of a tie at regulation, assume teams are equally matched, so conditional probability of winning in overtime is 0.5
p_win = p_win + p_win_overtime
} else {
p_win = 0
}
}
print(p_win)
current_diff = 3
n = rnorm(100, mean = 80, sd = 5) # empirical # of points left to earn
p = 0.5 # probability scoring on each play of losing team
# X ~ Binom(n, p) # the number of points losing team will score in remaining time
# Y ~ Binom(n, 1 - p) # the number of points winning team will score in remaining time
n = 100           # # of points left to earn
n_overtime = 10   # # of points in overtime
p_win = 0 # Probability of winning the game
for(n in 80:120){
n_prob = 1/41
if(n > current_diff){
# Probability of winning in regulation
p_win = p_win + (1 - pbinom(floor((n + current_diff)/2), n, p))*n_prob
# Probability of winning in overtime
if((n + current_diff) %% 2 == 0){
p_tie = dbinom((n + current_diff)/2, n, p)
} else {
p_tie = 0
}
p_win_overtime = p_tie*0.5*n_prob # In the event of a tie at regulation, assume teams are equally matched, so conditional probability of winning in overtime is 0.5
p_win = p_win + p_win_overtime
} else {
p_win = 0
}
}
print(p_win)
current_diff = 40
n = rnorm(100, mean = 80, sd = 5) # empirical # of points left to earn
p = 0.5 # probability scoring on each play of losing team
# X ~ Binom(n, p) # the number of points losing team will score in remaining time
# Y ~ Binom(n, 1 - p) # the number of points winning team will score in remaining time
n = 100           # # of points left to earn
n_overtime = 10   # # of points in overtime
p_win = 0 # Probability of winning the game
for(n in 80:120){
n_prob = 1/41
if(n > current_diff*2){
# Probability of winning in regulation
p_win = p_win + (1 - pbinom(floor((n + current_diff)/2), n, p))*n_prob
# Probability of winning in overtime
if((n + current_diff) %% 2 == 0){
p_tie = dbinom((n + current_diff)/2, n, p)
} else {
p_tie = 0
}
p_win_overtime = p_tie*0.5*n_prob # In the event of a tie at regulation, assume teams are equally matched, so conditional probability of winning in overtime is 0.5
p_win = p_win + p_win_overtime
} else {
p_win = 0
}
}
print(p_win)
current_diff = 60
n = rnorm(100, mean = 80, sd = 5) # empirical # of points left to earn
p = 0.5 # probability scoring on each play of losing team
# X ~ Binom(n, p) # the number of points losing team will score in remaining time
# Y ~ Binom(n, 1 - p) # the number of points winning team will score in remaining time
n = 100           # # of points left to earn
n_overtime = 10   # # of points in overtime
p_win = 0 # Probability of winning the game
for(n in 80:120){
n_prob = 1/41
if(n > current_diff*2){
# Probability of winning in regulation
p_win = p_win + (1 - pbinom(floor((n + current_diff)/2), n, p))*n_prob
# Probability of winning in overtime
if((n + current_diff) %% 2 == 0){
p_tie = dbinom((n + current_diff)/2, n, p)
} else {
p_tie = 0
}
p_win_overtime = p_tie*0.5*n_prob # In the event of a tie at regulation, assume teams are equally matched, so conditional probability of winning in overtime is 0.5
p_win = p_win + p_win_overtime
} else {
p_win = 0
}
}
print(p_win)
current_diff = 2
n = rnorm(100, mean = 80, sd = 5) # empirical # of points left to earn
p = 0.5 # probability scoring on each play of losing team
# X ~ Binom(n, p) # the number of points losing team will score in remaining time
# Y ~ Binom(n, 1 - p) # the number of points winning team will score in remaining time
n = 100           # # of points left to earn
n_overtime = 10   # # of points in overtime
p_win = 0 # Probability of winning the game
for(n in 80:120){
n_prob = 1/41
if(n > current_diff*2){
# Probability of winning in regulation
p_win = p_win + (1 - pbinom(floor((n + current_diff)/2), n, p))*n_prob
# Probability of winning in overtime
if((n + current_diff) %% 2 == 0){
p_tie = dbinom((n + current_diff)/2, n, p)
} else {
p_tie = 0
}
p_win_overtime = p_tie*0.5*n_prob # In the event of a tie at regulation, assume teams are equally matched, so conditional probability of winning in overtime is 0.5
p_win = p_win + p_win_overtime
} else {
p_win = 0
}
}
print(p_win)
library(tidyverse)
library(rvest)
webpage <- read_html("https://www.espn.com/nba/playbyplay?gameId=401248438")
times = webpage %>%
html_nodes(".time-stamp") %>%
html_text()
scores = webpage %>%
html_nodes(".combined-score") %>%
html_text()
tibble(times = times,
scores = scores)
library(reticulate)
# py_install("nba_api", pip = TRUE) # Install nba_api python module
# py_install("pandas")
py_install("nba_api", pip = TRUE) # Install nba_api python module
print(py$df)
df = py$df
df
names(df)
df$SCORE
as_tibble(df)
as_tibble(df) %>%
select(PCTIMESTRING, SCORES)
names(df)
as_tibble(df) %>%
select(PCTIMESTRING, SCORE, SCOREMARGIN)
df$SCOREMARGIN
as_tibble(df) %>%
select(PCTIMESTRING, SCORE, SCOREMARGIN)
