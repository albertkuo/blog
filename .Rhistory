mutate(gop_vote_percentage = party_pref/(party_pref + 1)) %>%
filter(gop_vote_percentage >= 0.45 & gop_vote_percentage <= 0.55) %>%
ggplot(aes(x = reorder(name, party_pref), y = gop_vote_percentage)) +
geom_hline(yintercept = 0.5) +
geom_point(aes(color = turnout_type)) +
geom_line(aes(group = name)) +
scale_color_manual(breaks = c("expected_turnout", "full_turnout"),
labels = c("Expected turnout", "Full turnout"),
values = c("#56B4E9", "#0072B2")) +
labs(title = "Swing states",
x = "State",
y = "GOP Vote Percentage*",
caption = "* Based on 2016 election results and 2019 demographics",
color = "") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggsave(file = "~/Desktop/election_2019_plot.png", width = 8, height = 5)
p1 = runif(100, 0, 1)
p1
p2 = seq(0, 1, by = 0.01)
p1 = runif(100, 0, 1)
s = seq(0, 1, by = 0.01)
gop = p2/(p2+1) - p1/(p1+1)
gop
length(p2)
p2 = seq(0.01, 1, by = 0.01)
p1 = runif(100, 0, 1)
s = seq(0, 1, by = 0.01)
gop = p2/(p2+1) - p1/(p1+1)
p2 = runif(100, 0, 1)
p1 = runif(100, 0, 1)
s = seq(0, 1, by = 0.01)
gop = p2/(p2+1) - p1/(p1+1)
gop
p2 = 0.6
p1 = 0.4
s = seq(0, 1, by = 0.01)
gop = (p2*s)/(p2*s+1) - (p1*s)/(p1*s+1)
plot(s, gop)
p2 = 0.5
p1 = 0.5
s = seq(0, 1, by = 0.01)
gop = (p2*s)/(p2*s+1) - (p1*s)/(p1*s+1)
plot(s, gop)
p2 = 0.4
p1 = 0.6
s = seq(0, 1, by = 0.01)
gop = (p2*s)/(p2*s+1) - (p1*s)/(p1*s+1)
plot(s, gop)
p2 = 0.6
p1 = 0.4
s = seq(0, 2, by = 0.01)
gop = (p2*s)/(p2*s+1) - (p1*s)/(p1*s+1)
plot(s, gop)
p2 = 0.6
p1 = 0.4
s = seq(0.5, 2, by = 0.01)
gop = (p2*s)/(p2*s+1) - (p1*s)/(p1*s+1)
plot(s, gop)
dt_demog_state
state_Tb
state_tb
summary(state_tb)
p2 = 0.6
p1 = 0.55
s = seq(0.5, 2, by = 0.01)
gop = (p2*s)/(p2*s+1) - (p1*s)/(p1*s+1)
plot(s, gop)
state_tb$state_bias
sort(state_tb$state_bias)
state_tb %>% filter(name %in% c("Michigan", "Florida", "Wisconsin", "Pennsylvania"))
p2 = 0.6
p1 = 0.55
s = seq(0.9, 1.3, by = 0.01)
gop = (p2*s)/(p2*s+1) - (p1*s)/(p1*s+1)
plot(s, gop)
p2 = 0.6
p1 = 0.5
s = seq(0.9, 1.3, by = 0.01)
gop = (p2*s)/(p2*s+1) - (p1*s)/(p1*s+1)
plot(s, gop)
dt_state_2019_combined
dt_state_2019
dt_state_2019 %>% filter(name %in% c("Michigan", "Florida", "Wisconsin", "Pennsylvania"))
dt_state_2019_combined
dt_state_2019_combined %>% filter(name %in% c("Michigan", "Florida", "Wisconsin", "Pennsylvania"))
dt_state_2019_combined %>% filter(name %in% c("Michigan", "Florida", "Wisconsin", "Pennsylvania")) %>% mutate(gop_vote_percentage = party_pref/(party_pref + 1))
# Calculate state_level party preference in 2019 (adjusted for state bias)
dt_state_2019 = dt_demog_state %>%
group_by(state, name) %>%
summarize_at(vars(party_pref), funs(weighted.mean(., w = turnout_weight2019))) %>%
ungroup() %>%
left_join(., state_tb, by = "name") %>%
mutate(party_pref_adj_expected_turnout = party_pref) %>%
arrange(party_pref_adj_expected_turnout)
# Calculate state-level party preference in 2019 under full turnout for all groups (adjusted for state bias)
dt_state_2019_full = dt_demog_state %>%
group_by(state, name) %>%
summarize_at(vars(party_pref), funs(weighted.mean(., w = popestimate2019))) %>%
ungroup() %>%
left_join(., state_tb, by = "name") %>%
mutate(party_pref_adj_full_turnout = party_pref) %>%
arrange(party_pref_adj_full_turnout)
dt_state_2019_combined = dt_state_2019 %>%
left_join(., dt_state_2019_full %>% select(name, party_pref_adj_full_turnout), by = "name") %>%
select(name, party_pref_adj_expected_turnout, party_pref_adj_full_turnout) %>%
pivot_longer(cols = starts_with("party_pref_adj"), names_to = "turnout_type", names_prefix = "party_pref_adj_", values_to = "party_pref")
dt_state_2019_combined %>%
mutate(gop_vote_percentage = party_pref/(party_pref + 1)) %>% filter(name %in% c("Michigan", "Florida", "Wisconsin", "Pennsylvania"))
p1 = dt_state_2016_combined %>%
filter(turnout_type %in% c("expected_turnout", "full_turnout")) %>%
mutate(gop_vote_percentage = party_pref/(party_pref + 1)) %>%
ggplot(aes(x = reorder(name, party_pref), y = gop_vote_percentage)) +
geom_hline(yintercept = 0.5) +
geom_point(aes(color = turnout_type)) +
geom_line(aes(group = name)) +
scale_y_continuous(labels = scales::percent_format(scale = 1)) +
scale_color_manual(breaks = c("expected_turnout", "full_turnout"),
labels = c("Actual turnout", "Full turnout"),
values = c("#56B4E9", "#0072B2")) +
labs(title = "All states",
x = "State",
y = "GOP Vote Percentage*",
caption = "* Based on 2016 election results and 2016 demographics",
color = "") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 7))
# Zoomed-in version
p2 = dt_state_2016_combined %>%
filter(turnout_type %in% c("expected_turnout", "full_turnout")) %>%
mutate(gop_vote_percentage = party_pref/(party_pref + 1)) %>%
filter(gop_vote_percentage >= 0.45 & gop_vote_percentage <= 0.55) %>%
ggplot(aes(x = reorder(name, party_pref), y = gop_vote_percentage)) +
geom_hline(yintercept = 0.5) +
geom_point(aes(color = turnout_type)) +
geom_line(aes(group = name)) +
scale_color_manual(breaks = c("expected_turnout", "full_turnout"),
labels = c("Actual turnout", "Full turnout"),
values = c("#56B4E9", "#0072B2")) +
labs(title = "Swing states",
x = "State",
y = "GOP Vote Percentage*",
caption = "* Based on 2016 election results and 2016 demographics",
color = "") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
plot_grid(p1, p2, labels = "auto", ncol = 1)
ggsave(file = "~/Desktop/election_2016_plot.png", width = 8, height = 10)
p1 = dt_state_2016_combined %>%
filter(turnout_type %in% c("expected_turnout", "full_turnout")) %>%
mutate(gop_vote_percentage = party_pref/(party_pref + 1)) %>%
ggplot(aes(x = reorder(name, party_pref), y = gop_vote_percentage)) +
geom_hline(yintercept = 0.5) +
geom_point(aes(color = turnout_type)) +
geom_line(aes(group = name)) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
scale_color_manual(breaks = c("expected_turnout", "full_turnout"),
labels = c("Actual turnout", "Full turnout"),
values = c("#56B4E9", "#0072B2")) +
labs(title = "All states",
x = "State",
y = "GOP Vote Percentage*",
caption = "* Based on 2016 election results and 2016 demographics",
color = "") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 7))
# Zoomed-in version
p2 = dt_state_2016_combined %>%
filter(turnout_type %in% c("expected_turnout", "full_turnout")) %>%
mutate(gop_vote_percentage = party_pref/(party_pref + 1)) %>%
filter(gop_vote_percentage >= 0.45 & gop_vote_percentage <= 0.55) %>%
ggplot(aes(x = reorder(name, party_pref), y = gop_vote_percentage)) +
geom_hline(yintercept = 0.5) +
geom_point(aes(color = turnout_type)) +
geom_line(aes(group = name)) +
scale_color_manual(breaks = c("expected_turnout", "full_turnout"),
labels = c("Actual turnout", "Full turnout"),
values = c("#56B4E9", "#0072B2")) +
labs(title = "Swing states",
x = "State",
y = "GOP Vote Percentage*",
caption = "* Based on 2016 election results and 2016 demographics",
color = "") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
plot_grid(p1, p2, labels = "auto", ncol = 1)
ggsave(file = "~/Desktop/election_2016_plot.png", width = 8, height = 10)
p1 = dt_state_2016_combined %>%
filter(turnout_type %in% c("expected_turnout", "full_turnout")) %>%
mutate(gop_vote_percentage = party_pref/(party_pref + 1)) %>%
ggplot(aes(x = reorder(name, party_pref), y = gop_vote_percentage)) +
geom_hline(yintercept = 0.5) +
geom_point(aes(color = turnout_type)) +
geom_line(aes(group = name)) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
scale_color_manual(breaks = c("expected_turnout", "full_turnout"),
labels = c("Actual turnout", "Full turnout"),
values = c("#56B4E9", "#0072B2")) +
labs(title = "All states",
x = "State",
y = "GOP Vote Percentage*",
caption = "* Based on 2016 election results and 2016 demographics",
color = "") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 7))
# Zoomed-in version
p2 = dt_state_2016_combined %>%
filter(turnout_type %in% c("expected_turnout", "full_turnout")) %>%
mutate(gop_vote_percentage = party_pref/(party_pref + 1)) %>%
filter(gop_vote_percentage >= 0.45 & gop_vote_percentage <= 0.55) %>%
ggplot(aes(x = reorder(name, party_pref), y = gop_vote_percentage)) +
geom_hline(yintercept = 0.5) +
geom_point(aes(color = turnout_type)) +
geom_line(aes(group = name)) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
scale_color_manual(breaks = c("expected_turnout", "full_turnout"),
labels = c("Actual turnout", "Full turnout"),
values = c("#56B4E9", "#0072B2")) +
labs(title = "Swing states",
x = "State",
y = "GOP Vote Percentage*",
caption = "* Based on 2016 election results and 2016 demographics",
color = "") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
plot_grid(p1, p2, labels = "auto", ncol = 1)
ggsave(file = "~/Desktop/election_2016_plot.png", width = 4, height = 5)
p1 = dt_state_2016_combined %>%
filter(turnout_type %in% c("expected_turnout", "full_turnout")) %>%
mutate(gop_vote_percentage = party_pref/(party_pref + 1)) %>%
ggplot(aes(x = reorder(name, party_pref), y = gop_vote_percentage)) +
geom_hline(yintercept = 0.5) +
geom_point(aes(color = turnout_type)) +
geom_line(aes(group = name)) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
scale_color_manual(breaks = c("expected_turnout", "full_turnout"),
labels = c("Actual turnout", "Full turnout"),
values = c("#56B4E9", "#0072B2")) +
labs(title = "All states",
x = "State",
y = "GOP Vote Percentage*",
caption = "* Based on 2016 election results and 2016 demographics",
color = "") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 7))
# Zoomed-in version
p2 = dt_state_2016_combined %>%
filter(turnout_type %in% c("expected_turnout", "full_turnout")) %>%
mutate(gop_vote_percentage = party_pref/(party_pref + 1)) %>%
filter(gop_vote_percentage >= 0.45 & gop_vote_percentage <= 0.55) %>%
ggplot(aes(x = reorder(name, party_pref), y = gop_vote_percentage)) +
geom_hline(yintercept = 0.5) +
geom_point(aes(color = turnout_type)) +
geom_line(aes(group = name)) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
scale_color_manual(breaks = c("expected_turnout", "full_turnout"),
labels = c("Actual turnout", "Full turnout"),
values = c("#56B4E9", "#0072B2")) +
labs(title = "Swing states",
x = "State",
y = "GOP Vote Percentage*",
caption = "* Based on 2016 election results and 2016 demographics",
color = "") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
plot_grid(p1, p2, labels = "auto", ncol = 1)
ggsave(file = "~/Desktop/election_2016_plot.png", width = 7, height = 9)
p1 = dt_state_2016_combined %>%
filter(turnout_type %in% c("expected_turnout", "full_turnout")) %>%
mutate(gop_vote_percentage = party_pref/(party_pref + 1)) %>%
ggplot(aes(x = reorder(name, party_pref), y = gop_vote_percentage)) +
geom_hline(yintercept = 0.5) +
geom_point(aes(color = turnout_type)) +
geom_line(aes(group = name)) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
scale_color_manual(breaks = c("expected_turnout", "full_turnout"),
labels = c("Actual turnout", "Full turnout"),
values = c("#56B4E9", "#0072B2")) +
labs(title = "All states",
x = "State",
y = "GOP Vote Percentage*",
caption = "* Based on 2016 election results and 2016 demographics",
color = "") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 7))
# Zoomed-in version
p2 = dt_state_2016_combined %>%
filter(turnout_type %in% c("expected_turnout", "full_turnout")) %>%
mutate(gop_vote_percentage = party_pref/(party_pref + 1)) %>%
filter(gop_vote_percentage >= 0.45 & gop_vote_percentage <= 0.55) %>%
ggplot(aes(x = reorder(name, party_pref), y = gop_vote_percentage)) +
geom_hline(yintercept = 0.5) +
geom_point(aes(color = turnout_type)) +
geom_line(aes(group = name)) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
scale_color_manual(breaks = c("expected_turnout", "full_turnout"),
labels = c("Actual turnout", "Full turnout"),
values = c("#56B4E9", "#0072B2")) +
labs(title = "Swing states",
x = "State",
y = "GOP Vote Percentage*",
caption = "* Based on 2016 election results and 2016 demographics",
color = "") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
plot_grid(p1, p2, labels = "auto", ncol = 1)
ggsave(file = "~/Desktop/election_2016_plot.png", width = 6, height = 8)
# Plot 2016 election with 2008 race turnout
dt_state_2016_combined %>%
filter(turnout_type %in% c("expected_turnout", "2008_turnout")) %>%
mutate(gop_vote_percentage = party_pref/(party_pref + 1)) %>%
filter(gop_vote_percentage >= 0.45 & gop_vote_percentage <= 0.55) %>%
ggplot(aes(x = reorder(name, party_pref), y = gop_vote_percentage)) +
geom_hline(yintercept = 0.5) +
geom_point(aes(color = turnout_type)) +
geom_line(aes(group = name)) +
scale_color_manual(breaks = c("expected_turnout", "2008_turnout"),
labels = c("Actual turnout", "2008 turnout"),
values = c("#56B4E9", "#D55E00")) +
labs(title = "Swing states",
x = "State",
y = "GOP Vote Percentage*",
caption = "* Based on 2016 election results and 2008/16 demographics",
color = "") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggsave(file = "~/Desktop/election_2016_plot_2.png", width = 6, height = 4)
# Calculate state_level party preference in 2019 (adjusted for state bias)
dt_state_2019 = dt_demog_state %>%
group_by(state, name) %>%
summarize_at(vars(party_pref), funs(weighted.mean(., w = turnout_weight2019))) %>%
ungroup() %>%
left_join(., state_tb, by = "name") %>%
mutate(party_pref_adj_expected_turnout = party_pref*state_bias) %>%
arrange(party_pref_adj_expected_turnout)
# Calculate state-level party preference in 2019 under full turnout for all groups (adjusted for state bias)
dt_state_2019_full = dt_demog_state %>%
group_by(state, name) %>%
summarize_at(vars(party_pref), funs(weighted.mean(., w = popestimate2019))) %>%
ungroup() %>%
left_join(., state_tb, by = "name") %>%
mutate(party_pref_adj_full_turnout = party_pref*state_bias) %>%
arrange(party_pref_adj_full_turnout)
dt_state_2019_combined = dt_state_2019 %>%
left_join(., dt_state_2019_full %>% select(name, party_pref_adj_full_turnout), by = "name") %>%
select(name, party_pref_adj_expected_turnout, party_pref_adj_full_turnout) %>%
pivot_longer(cols = starts_with("party_pref_adj"), names_to = "turnout_type", names_prefix = "party_pref_adj_", values_to = "party_pref")
dt_state_2019_combined %>%
mutate(gop_vote_percentage = party_pref/(party_pref + 1)) %>%
filter(gop_vote_percentage >= 0.45 & gop_vote_percentage <= 0.55) %>%
ggplot(aes(x = reorder(name, party_pref), y = gop_vote_percentage)) +
geom_hline(yintercept = 0.5) +
geom_point(aes(color = turnout_type)) +
geom_line(aes(group = name)) +
scale_color_manual(breaks = c("expected_turnout", "full_turnout"),
labels = c("Expected turnout", "Full turnout"),
values = c("#56B4E9", "#0072B2")) +
labs(title = "Swing states",
x = "State",
y = "GOP Vote Percentage*",
caption = "* Based on 2016 election results and 2019 demographics",
color = "") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggsave(file = "~/Desktop/election_2019_plot.png", width = 6, height = 4)
# Plot 2016 election with 2008 race turnout
dt_state_2016_combined %>%
filter(turnout_type %in% c("expected_turnout", "2008_turnout")) %>%
mutate(gop_vote_percentage = party_pref/(party_pref + 1)) %>%
filter(gop_vote_percentage >= 0.45 & gop_vote_percentage <= 0.55) %>%
ggplot(aes(x = reorder(name, party_pref), y = gop_vote_percentage)) +
geom_hline(yintercept = 0.5) +
geom_point(aes(color = turnout_type)) +
geom_line(aes(group = name)) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
scale_color_manual(breaks = c("expected_turnout", "2008_turnout"),
labels = c("Actual turnout", "2008 turnout"),
values = c("#56B4E9", "#D55E00")) +
labs(title = "Swing states",
x = "State",
y = "GOP Vote Percentage*",
caption = "* Based on 2016 election results and 2008/16 demographics",
color = "") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggsave(file = "~/Desktop/election_2016_plot_2.png", width = 6, height = 4)
dt_state_2019_combined %>%
mutate(gop_vote_percentage = party_pref/(party_pref + 1)) %>%
filter(gop_vote_percentage >= 0.45 & gop_vote_percentage <= 0.55) %>%
ggplot(aes(x = reorder(name, party_pref), y = gop_vote_percentage)) +
geom_hline(yintercept = 0.5) +
geom_point(aes(color = turnout_type)) +
geom_line(aes(group = name)) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
scale_color_manual(breaks = c("expected_turnout", "full_turnout"),
labels = c("Expected turnout", "Full turnout"),
values = c("#56B4E9", "#0072B2")) +
labs(title = "Swing states",
x = "State",
y = "GOP Vote Percentage*",
caption = "* Based on 2016 election results and 2019 demographics",
color = "") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggsave(file = "~/Desktop/election_2019_plot.png", width = 6, height = 4)
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::serve_site()
dt_state_2016_combined = dt_state_2016 %>%
left_join(., dt_state_2016_turnout2008 %>% select(name, party_pref_adj_2008_turnout), by = "name") %>%
left_join(., dt_state_2016_full %>% select(name, party_pref_adj_full_turnout), by = "name") %>%
select(name, party_pref_adj_expected_turnout, party_pref_adj_full_turnout, party_pref_adj_2008_turnout) %>%
pivot_longer(cols = starts_with("party_pref_adj"), names_to = "turnout_type", names_prefix = "party_pref_adj_", values_to = "party_pref") %>%
mutate(gop_vote_percentage = party_pref/(party_pref + 1))
p1 = dt_state_2016_combined %>%
filter(turnout_type %in% c("expected_turnout", "full_turnout")) %>%
ggplot(aes(x = reorder(name, party_pref), y = gop_vote_percentage)) +
geom_hline(yintercept = 0.5) +
geom_point(aes(color = turnout_type)) +
geom_line(aes(group = name)) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
scale_color_manual(breaks = c("expected_turnout", "full_turnout"),
labels = c("Actual turnout", "Full turnout"),
values = c("#56B4E9", "#0072B2")) +
labs(title = "All states",
x = "State",
y = "GOP Vote Percentage*",
caption = "* Based on 2016 election results and 2016 demographics",
color = "") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 7))
# Zoomed-in version
p2 = dt_state_2016_combined %>%
filter(turnout_type %in% c("expected_turnout", "full_turnout")) %>%
filter(gop_vote_percentage >= 0.45 & gop_vote_percentage <= 0.55) %>%
ggplot(aes(x = reorder(name, party_pref), y = gop_vote_percentage)) +
geom_hline(yintercept = 0.5) +
geom_point(aes(color = turnout_type)) +
geom_line(aes(group = name)) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
scale_color_manual(breaks = c("expected_turnout", "full_turnout"),
labels = c("Actual turnout", "Full turnout"),
values = c("#56B4E9", "#0072B2")) +
labs(title = "Swing states",
x = "State",
y = "GOP Vote Percentage*",
caption = "* Based on 2016 election results and 2016 demographics",
color = "") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
plot_grid(p1, p2, labels = "auto", ncol = 1)
# ggsave(file = "~/Desktop/election_2016_plot.png", width = 6, height = 8)
# Plot 2016 election with 2008 race turnout
dt_state_2016_combined %>%
filter(turnout_type %in% c("expected_turnout", "2008_turnout")) %>%
filter(gop_vote_percentage >= 0.45 & gop_vote_percentage <= 0.55) %>%
ggplot(aes(x = reorder(name, party_pref), y = gop_vote_percentage)) +
geom_hline(yintercept = 0.5) +
geom_point(aes(color = turnout_type)) +
geom_line(aes(group = name)) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
scale_color_manual(breaks = c("expected_turnout", "2008_turnout"),
labels = c("Actual turnout", "2008 turnout"),
values = c("#56B4E9", "#D55E00")) +
labs(title = "Swing states",
x = "State",
y = "GOP Vote Percentage*",
caption = "* Based on 2016 election results and 2008/16 demographics",
color = "") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
# ggsave(file = "~/Desktop/election_2016_plot_2.png", width = 6, height = 4)
# Calculate state_level party preference in 2019 (adjusted for state bias)
dt_state_2019 = dt_demog_state %>%
group_by(state, name) %>%
summarize_at(vars(party_pref), funs(weighted.mean(., w = turnout_weight2019))) %>%
ungroup() %>%
left_join(., state_tb, by = "name") %>%
mutate(party_pref_adj_expected_turnout = party_pref*state_bias) %>%
arrange(party_pref_adj_expected_turnout)
# Calculate state-level party preference in 2019 under full turnout for all groups (adjusted for state bias)
dt_state_2019_full = dt_demog_state %>%
group_by(state, name) %>%
summarize_at(vars(party_pref), funs(weighted.mean(., w = popestimate2019))) %>%
ungroup() %>%
left_join(., state_tb, by = "name") %>%
mutate(party_pref_adj_full_turnout = party_pref*state_bias) %>%
arrange(party_pref_adj_full_turnout)
dt_state_2019_combined = dt_state_2019 %>%
left_join(., dt_state_2019_full %>% select(name, party_pref_adj_full_turnout), by = "name") %>%
select(name, party_pref_adj_expected_turnout, party_pref_adj_full_turnout) %>%
pivot_longer(cols = starts_with("party_pref_adj"), names_to = "turnout_type", names_prefix = "party_pref_adj_", values_to = "party_pref") %>%
mutate(gop_vote_percentage = party_pref/(party_pref + 1))
dt_state_2019_combined %>%
filter(gop_vote_percentage >= 0.45 & gop_vote_percentage <= 0.55) %>%
ggplot(aes(x = reorder(name, party_pref), y = gop_vote_percentage)) +
geom_hline(yintercept = 0.5) +
geom_point(aes(color = turnout_type)) +
geom_line(aes(group = name)) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
scale_color_manual(breaks = c("expected_turnout", "full_turnout"),
labels = c("Expected turnout", "Full turnout"),
values = c("#56B4E9", "#0072B2")) +
labs(title = "Swing states",
x = "State",
y = "GOP Vote Percentage*",
caption = "* Based on 2016 election results and 2019 demographics",
color = "") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
# ggsave(file = "~/Desktop/election_2019_plot.png", width = 6, height = 4)
